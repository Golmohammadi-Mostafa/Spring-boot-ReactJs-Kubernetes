apiVersion: v1                                          # API version
kind: Service                                           # Type of kubernetes resource
metadata:
  name: stakater-frontend-service                       # Name of the kubernetes resource
spec:
  type: NodePort                                        # Exposes the service by opening a port on each node
  selector:
    app: stakater-frontend-app                          # Any Pod matching the label `app=corona-tracker-client` will be picked up by this service
  ports:                                                # Forward incoming connections on port 80 to the target port 80 in the Pod
  - port: 3000
    targetPort: 3000
    
---
apiVersion: apps/v1                                     # API version
kind: Deployment                                        # Type of kubernetes resource
metadata:
  name: stakater-frontend-app                           # Name of the kubernetes resource
spec:
  replicas: 1                                           # No of replicas/pods to run
  selector:                     
    matchLabels:                                        # This deployment applies to Pods matching the specified labels
      app: stakater-frontend-app
      
  template:                                             # Template for creating the Pods in this deployment
    metadata:
      name: stakater-frontend-app
      labels:                                           # Labels that will be applied to all the Pods in this deployment
        app: stakater-frontend-app
    spec:                                               # Spec for the containers that will run inside the Pods
      containers:
      - name: stakater-frontend-app
        image: stakater-backend
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3000                          # Should match the Port that the container listens on

